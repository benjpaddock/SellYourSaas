---
# Script to create a system user on servers
#
# To run the script:
# ansible-playbook -K create_user.yml -i hosts-xxx -e 'target=targethost name=user key="key"'
# notice the double quotes around the key so spaces are interpreted as part of it
# ansible-playbook -K create_user.yml -i hosts-xxx -e 'target=targethost ip=www.xxx.yyy.zzz name=user key="key"'
# you can specify an IP for that user with the syntax above
# ansible-playbook -K create_user.yml -i hosts-xxx -e 'target=targethost name=user key="key"' --limit=*.mydomain.com
#

- name: Create user on target system(s)
  hosts: '{{target}}'
  become: yes
  #become_method: sudo
  become_user: root
  tasks:
  - name: Get public key into a variable
    command: "/home/admin/wwwroot/dolibarr_sellyoursaas/scripts/ansible/info_users.php ip {{name}}"
    register: userip

  - name: Get public key into a variable
    command: "/home/admin/wwwroot/dolibarr_sellyoursaas/scripts/ansible/info_users.php public_key {{name}}"
    register: userpublickey

  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: userip
      verbosity: 2

  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: userpublickey
      verbosity: 2

  - name: Create system user
    user:
      name: '{{ name }}'

  - name: Set public key of user
    authorized_key:
      user: '{{ name }}'
      state: present
      key: '{{ userpublickey }}'
    when: userpublickey is defined

  - name: Add user to AllowUsers in SSH sellyoursaas conf
    lineinfile:
      path: /etc/ssh/sshd_config.d/sellyoursaas.conf
      line: "AllowUsers {{ name }}"

  - name: Restart SSH service to recognize that new user
    service:
      name: ssh
      state: restarted

  - name: If IP was provided, add it to the conf dir
    ansible.builtin.lineinfile:
      path: "/etc/sellyoursaas.d/{{ name }}.conf"
      line: "Require ip {{ userip }}"
      create: yes
    ignore_errors: true
    when: userip is defined
