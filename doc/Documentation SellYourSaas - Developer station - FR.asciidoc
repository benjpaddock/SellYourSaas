= Document installation et exploitation SellYourSaas - Post de maintenance
:source-highlighter: rouge
:companyname: Teclib
:corpname: Teclib
:orgname: Teclib
:title: Document installation du poste de maintenance SellYourSaas
// Date du document :
:docdate: 30/01/2019
// Ville associée au document
:city: Bordeaux
:toc: manual
:toc-placement: preamble
Ce document décrit les spécifications techniques pour la mise en oeuvre du poste client de l'administrateur du service SellYourSaas (service de mise en SaaS automatisé par Dolibarr).



== Installation de la machine et OS

=== Choix machine ===

* PC sous Ubuntu avec 16Go de mémoire


=== OS Ubuntu server ===

* Installation de Ubuntu 18.04 + Mate.


=== Installation DNS local

* Installer bind.

Voir la page https://lani78.com/2012/07/22/setting-up-a-dns-for-the-local-network-on-the-ubuntu-12-04-precise-pangolin-server/
pour configurer le serveur avec un domain local.

    host home.lan 127.0.0.1      doit alors fonctionner

S'assurer que le client effectue les résolutions en utilisant le serveur local 127.0.0.1 automatiquement

    host home.lan                doit aussi fonctionner

Sinon, vérifier le fichier */etc/resolv.conf* et désactiver systemd-resolver pour laisser la main à NetWorkManager (voir point suivant)

* Désactiver *systemd-resolver* afin de laisser NetWorkManager remplir le fichier *resolv.conf*

[source,bash]
---------------
sudo systemctl disable systemd-resolved.service
sudo systemctl stop systemd-resolved
vi /etc/NetworkManager/NetworkManager.conf   pour ajouter  dns=default   dans la section [main]
rm /etc/resolv.conf
sudo service network-manager restart
---------------


Note: Another solution may be to edit */etc/systemd/resolved.conf* with

[source,bash]
---------------
[Resolve]
DNS=127.0.0.1       # or 192.168.0.254
#FallbackDNS=8.8.8.8 8.8.4.4 2001:4860:4860::8888 2001:4860:4860::8844
Domains=lan         # <-- change to your localdomain name (maybe .local)
---------------




=== Installation du switcher de sortie son ===

[source,bash]
---------------
sudo add-apt-repository ppa:yktooo/ppa
sudo apt-get update
sudo apt-get install indicator-sound-switcher
---------------



=== Ajout support asciidoc à Gedit ou Pluma

[source,bash]
---------------
cd ~/git
git clone https://github.com/edusantana/asciidoc-highlight
cd ~/git/asciidoc-highlight/gedit/
./install.sh
---------------


=== Gestion Google Cloud Print

[source,bash]
---------------
cd ~
sudo apt install google-cloud-print-connector
adduser cloud-print-connector
/usr/bin/gcp-connector-util i
---------------

Corriger les chemins dans *~/gcp-cups-connector.config.json* si nécessaire et mettre les droits.

chmod ug+rw ~/gcp-cups-connector.config.json
chgrp cloud-print-connector ~/gcp-cups-connector.config.json

Lancer manuellement /usr/bin/gcp-cups-connector et vérifier dans *https://www.google.com/cloudprint#printers* que les imprimantes sont visibles.


Créer un fichier de lancement automatique *~/cloud-print-connector.service* avec ce contenu

[source,bash]
---------------
# Copyright 2016 Google Inc. All rights reserved.
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file or at
# https://developers.google.com/open-source/licenses/bsd

[Unit]
Description=Google Cloud Print Connector
Documentation="https://github.com/google/cloud-print-connector"
After=cups.service avahi-daemon.service network-online.target
Wants=cups.service avahi-daemon.service network-online.target

[Service]
ExecStart=/usr/bin/gcp-cups-connector -config-filename /home/mylogin/gcp-cups-connector.config.json
Restart=on-failure
User=cloud-print-connector

[Install]
WantedBy=multi-user.target
---------------

Et installer le lancement par

    sudo install -o root -m 0664 cloud-print-connector.service /etc/systemd/system
    sudo systemctl enable cloud-print-connector.service
    sudo systemctl start cloud-print-connector.service
    sudo systemctl status cloud-print-connector.service


=== Avoir un bureau distant

* Installer "vino"

* Si le client VNC est trop ancien et refuse l'accès car le server demande du TLS, il est possible de faire ceci sur le serveur:

[source,bash]
---------------
sudo killall vino-server
gsettings set org.gnome.Vino require-encryption false
/usr/lib/vino/vino-server
---------------

